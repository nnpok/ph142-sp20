c("apple", "banana") %in% c("apple", "banana", "pear")
source("setup/hw01.RAGS.R")
all(c("apple", "banana") %in% c("apple", "banana", "pear"))
source("setup/hw01.RAGS.R")
library(dplyr)
library(readr)
sleep <- read_csv("sleep.csv")
# Text inside a code chunk that begins with "#" is called a comment.
# We sometimes use comments to explain code to you in plain English.
# Write your four functions below these comments, replacing the placeholder
# text "<<<<YOUR CODE HERE>>>>". Remember, code does *not* begin with a "#"
"<<<<YOUR CODE HERE>>>>"
"<<<<YOUR CODE HERE>>>>"
"<<<<YOUR CODE HERE>>>>"
"<<<<YOUR CODE HERE>>>>"
# Then, assign p1 to a vector of your function names, in alphabetical order.
# For example, assigning p0 to a vector of fruits looks like this:
# p0 <- c("apple", "banana", "orange")
p1 <- c("rename", "select", "arrange", "filter")
check_problem1()
source("setup/hw01.RAGS.R")
library(dplyr)
library(readr)
sleep <- read_csv("sleep.csv")
# Text inside a code chunk that begins with "#" is called a comment.
# We sometimes use comments to explain code to you in plain English.
# Write your four functions below these comments, replacing the placeholder
# text "<<<<YOUR CODE HERE>>>>". Remember, code does *not* begin with a "#"
"<<<<YOUR CODE HERE>>>>"
"<<<<YOUR CODE HERE>>>>"
"<<<<YOUR CODE HERE>>>>"
"<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
dim(sleep)
head(sleep)
names(sleep)
str(sleep)
# END SOLUTION
# Then, assign p1 to a vector of your function names, in alphabetical order.
# For example, assigning p0 to a vector of fruits looks like this:
# p0 <- c("apple", "banana", "orange")
p1 <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
p1 <- c("dim", "head", "names", "str")
# END SOLUTION
check_problem1()
sleep_small <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_small <- sleep %>% select(awake, brainwt, bodywt)
# ALTERNATE SOLUTION
sleep_small <- select(sleep, awake, brainwt, bodywt)
# END SOLUTION
check_problem2()
sleep_small_colon <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_small_colon <- sleep %>% select(awake:bodywt)
# END SOLUTION
check_problem3()
sleep_no_vore <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_no_vore <- sleep %>% select(-vore)
# END SOLUTION
check_problem4()
select(sleep, starts_with("sl"))
# p5 <- "returns the number of columns that start with sl"
# p5 <- "returns all columns that start with sl"
# p5 <- "returns all rows that start with sl"
# p5 <- "returns all animals whose names start with sl""
# BEGIN SOLUTION
p5 <- "returns all rows that start with sl"
# END SOLUTION
check_problem5()
sleep_sl <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_sl <- sleep %>% select(starts_with("sl"))
# END SOLUTION
check_problem6()
sleep_over16 <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_over16 <- sleep %>% filter(sleep_total > 16)
# END SOLUTION
check_problem7()
sleep_mammals <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_mammals <- sleep %>% filter(sleep_total > 16 & bodywt > 1)
# ALTERNATE SOLUTION
sleep_mammals <- sleep %>% filter(sleep_total > 16, bodywt > 1)
# END SOLUTION
check_problem8()
sleep_hg <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_hg <- sleep %>% filter(name %in% c("Horse", "Giraffe"))
# notice quotes and capitalization!
# END SOLUTION
check_problem9()
sleep_time <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_time <- sleep %>% arrange(sleep_total)
# END SOLUTION
check_problem10()
sleep_time_rev <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_time_rev <- sleep %>% arrange(-sleep_total)
# END SOLUTION
check_problem11()
sleep_time_vore <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_time_vore <- sleep %>% arrange(vore, -sleep_total)
# END SOLUTION
check_problem12()
sleep_time_vore <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_time_vore <- sleep %>% arrange(vore, sleep_total)
# END SOLUTION
check_problem12()
source("setup/hw01.RAGS.R")
library(dplyr)
library(readr)
sleep <- read_csv("sleep.csv")
# Text inside a code chunk that begins with "#" is called a comment.
# We sometimes use comments to explain code to you in plain English.
# Write your four functions below these comments, replacing the placeholder
# text "<<<<YOUR CODE HERE>>>>". Remember, code does *not* begin with a "#"
"<<<<YOUR CODE HERE>>>>"
"<<<<YOUR CODE HERE>>>>"
"<<<<YOUR CODE HERE>>>>"
"<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
dim(sleep)
head(sleep)
names(sleep)
str(sleep)
# END SOLUTION
# Then, assign p1 to a vector of your function names, in alphabetical order.
# For example, assigning p0 to a vector of fruits looks like this:
# p0 <- c("apple", "banana", "orange")
p1 <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
p1 <- c("dim", "head", "names", "str")
# END SOLUTION
check_problem1()
sleep_small <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_small <- sleep %>% select(awake, brainwt, bodywt)
# ALTERNATE SOLUTION
sleep_small <- select(sleep, awake, brainwt, bodywt)
# END SOLUTION
check_problem2()
sleep_small_colon <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_small_colon <- sleep %>% select(awake:bodywt)
# END SOLUTION
check_problem3()
sleep_no_vore <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_no_vore <- sleep %>% select(-vore)
# END SOLUTION
check_problem4()
select(sleep, starts_with("sl"))
# p5 <- "returns the number of columns that start with sl"
# p5 <- "returns all columns that start with sl"
# p5 <- "returns all rows that start with sl"
# p5 <- "returns all animals whose names start with sl""
# BEGIN SOLUTION
p5 <- "returns all rows that start with sl"
# END SOLUTION
check_problem5()
sleep_sl <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_sl <- sleep %>% select(starts_with("sl"))
# END SOLUTION
check_problem6()
sleep_over16 <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_over16 <- sleep %>% filter(sleep_total > 16)
# END SOLUTION
check_problem7()
sleep_mammals <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_mammals <- sleep %>% filter(sleep_total > 16 & bodywt > 1)
# ALTERNATE SOLUTION
sleep_mammals <- sleep %>% filter(sleep_total > 16, bodywt > 1)
# END SOLUTION
check_problem8()
sleep_hg <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_hg <- sleep %>% filter(name %in% c("Horse", "Giraffe"))
# notice quotes and capitalization!
# END SOLUTION
check_problem9()
sleep_time <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_time <- sleep %>% arrange(sleep_total)
# END SOLUTION
check_problem10()
sleep_time_rev <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_time_rev <- sleep %>% arrange(-sleep_total)
# END SOLUTION
check_problem11()
sleep_time_vore <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_time_vore <- sleep %>% arrange(vore, sleep_total)
# END SOLUTION
check_problem12()
sleep_time_vore <- "<<<<YOUR CODE HERE>>>>"
# BEGIN SOLUTION
sleep_time_vore <- sleep %>% arrange(vore, -sleep_total)
# END SOLUTION
check_problem12()
